# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle
env:
  DOCK_USER: ${{secrets.DOCK_USER}}
  DOCK_PASS: ${{secrets.DOCK_PASS}}
  REPO_NAME: "my_repo"
on:
  push:
    branches:
      - "**"
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build-gradle-project:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3
      - name: Run build with Gradle Wrapper
        run: ./gradlew build

  cd_pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: List Build Output
        run: ls -R /
      - uses: actions/checkout@v2
      - name: docker login
        run: | # log into docker hub account
          docker login -u $DOCK_USER -p $DOCK_PASS
      - name: Get current date # get the date of the build
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d--%M-%S')"
      - name: Build the Docker image # push The image to the docker hub
        run: docker build . --file Dockerfile --tag $DOCK_USER/$REPO_NAME:${{ steps.date.outputs.date }}
      - name: Docker Push
        run: docker push $DOCK_USER/$REPO_NAME:${{ steps.date.outputs.date }}